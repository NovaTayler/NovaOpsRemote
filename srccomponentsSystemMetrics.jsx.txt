// src/components/SystemMetrics.jsx
import React from 'react';
import { Activity, Cpu, HardDrive, Wifi } from 'lucide-react';

const SystemMetrics = ({ metrics }) => {
  const CircularProgress = ({ value, label, color = 'indigo' }) => {
    const circumference = 2 * Math.PI * 40;
    const strokeDashoffset = circumference - (value / 100) * circumference;
    return (
      <div className="flex flex-col items-center">
        <div className="relative w-20 h-20">
          <svg className="w-20 h-20 transform -rotate-90" viewBox="0 0 100 100">
            <circle cx="50" cy="50" r="40" stroke="currentColor" strokeWidth="8" fill="transparent" className="text-gray-700" />
            <circle
              cx="50"
              cy="50"
              r="40"
              stroke="currentColor"
              strokeWidth="8"
              fill="transparent"
              strokeDasharray={circumference}
              strokeDashoffset={strokeDashoffset}
              className={`text-${color}-400 transition-all duration-500`}
              strokeLinecap="round"
            />
            <text x="50" y="50" textAnchor="middle" dy=".3em" className="text-sm font-bold text-white">{Math.round(value)}%</text>
          </svg>
        </div>
        <span className="text-xs text-gray-400 mt-2">{label}</span>
      </div>
    );
  };
  return (
    <div className="bg-gray-800 rounded-2xl p-6 border border-gray-700">
      <div className="flex items-center justify-between mb-6">
        <h3 className="text-lg font-bold text-white flex items-center">
          <Activity className="w-5 h-5 mr-2 text-indigo-400" />
          System Metrics
        </h3>
        <div className="flex items-center text-green-400 text-sm">
          <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse mr-2" />
          Live
        </div>
      </div>
      <div className="grid grid-cols-2 lg:grid-cols-4 gap-4">
        <CircularProgress value={metrics?.cpu_percent || 0} label="CPU" color="blue" />
        <CircularProgress value={metrics?.memory_percent || 0} label="Memory" color="green" />
        <CircularProgress value={metrics?.disk_percent || 0} label="Disk" color="yellow" />
        <CircularProgress value={(metrics?.network_io?.sent || 0) / 10} label="Network" color="purple" />
      </div>
    </div>
  );
};

export default SystemMetrics;